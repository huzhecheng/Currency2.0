{"version":3,"sources":["actions/currencyAction.js","reducers/submitValue.js","reducers/currencyFetch.js","reducers/index.js","components/CusTable.js","App.js","serviceWorker.js","index.js"],"names":["fetchCurrency","dispatch","type","fetch","then","handleErrors","res","json","payload","currencys","catch","error","fetchCurrencyError","response","ok","Error","statusText","initialStates","twd","forex","status","submitValue","state","arguments","length","undefined","action","Object","objectSpread","items","loading","currencyFetch","combineReducers","Column","ColumnGroup","CaretUp","_ref","value","differ","react_default","a","createElement","style","color","fontSize","paddingLeft","icon","CaretDown","_ref2","renderBuyColumn","recentArray","prop","defaultday","find","x","key","country","toFixed","CusTable_CaretUp","Math","abs","CusTable_CaretDown","renderSellColumn","CusTable","_this","this","_this$props","props","dataSource","map","v","day_10","recent","day_30","day_60","day_90","day_120","day_150","day_180","console","log","table","scroll","y","rowKey","pagination","title","dataIndex","fixed","align","width","render","src","alt","parseFloat","datesell","cashsell","mark","isFinite","build_default","start","end","Number","duration","separator","decimals","ref","countUp","myCountUp","datebuy","cashbuy","Component","connect","_ref3","TabPane","Option","expectTree","USD","買進","賣出","AUD","JPY","ZAR","CNY","App","_this2","className","theme","twoToneColor","es_switch","checkedChildren","unCheckedChildren","defaultChecked","marginBottom","onChange","checked","setState","input_number","min","max","step","defaultValue","formatter","concat","replace","parser","es_button","onClick","es_select","maxHeight","main_default","name","displayDataTypes","displayObjectSize","onEdit","collapsed","tabs","defaultActiveKey","tab","components_CusTable","Boolean","window","location","hostname","match","store","createStore","rootReducer","applyMiddleware","thunk","ReactDOM","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fa71829d.chunk.js","sourcesContent":["/* fetchData */\nexport const FETCH_CURRENCY_BEGIN = \"FETCH_CURRENCY_BEGIN\";\nexport const FETCH_CURRENCY_SUCCESS = \"FETCH_CURRENCY_SUCCESS\";\nexport const FETCH_CURRENCY_FAILURE = \"FETCH_CURRENCY_FAILURE\";\nexport const fetchCurrencyBegin = () => ({\n  type: FETCH_CURRENCY_BEGIN\n});\n\nexport const fetchCurrencySuccess = currencys => ({\n  type: FETCH_CURRENCY_SUCCESS,\n  payload: { currencys }\n});\n\nexport const fetchCurrencyError = error => ({\n  type: FETCH_CURRENCY_FAILURE,\n  payload: { error }\n});\n\nexport const fetchCurrency = dispatch => {\n  dispatch(fetchCurrencyBegin());\n  fetch(\"https://fred-express-api.herokuapp.com/api/currency\")\n    .then(handleErrors)\n    .then(res => res.json())\n    .then(json => {\n      dispatch(fetchCurrencySuccess(json));\n    })\n    .catch(error => dispatch(fetchCurrencyError(error)));\n};\n\nconst handleErrors = response => {\n  if (!response.ok) {\n    throw Error(response.statusText);\n  }\n  return response;\n};\n\n/* submitValue */\nexport const SUBMIT_VALUE = \"SUBMIT_VALUE\";\nexport const submitValue = ({ twd, forex, status }) => ({\n  type: SUBMIT_VALUE,\n  payload: { twd, forex, status }\n});\n","import {\n  SUBMIT_VALUE,\n} from \"../actions/currencyAction\";\n\nconst initialStates = {\n  twd: 100,\n  forex: 100,\n  status: true\n};\n\n\nconst submitValue = (state = initialStates, action) => {\n  switch (action.type) {\n    case SUBMIT_VALUE:\n      return {\n        ...state,\n        twd: action.payload.twd,\n        forex: action.payload.forex,\n        status: action.payload.status\n      };\n    default:\n      return state;\n  }\n};\n\nexport default submitValue;\n","import {\n  FETCH_CURRENCY_BEGIN,\n  FETCH_CURRENCY_SUCCESS,\n  FETCH_CURRENCY_FAILURE\n} from \"../actions/currencyAction\";\n\nconst initialStates = {\n  items: [],\n  loading: true,\n  error: null\n};\n\nconst currencyFetch = (state = initialStates, action) => {\n  switch (action.type) {\n    case FETCH_CURRENCY_BEGIN:\n      return {\n        ...state,\n        loading: true,\n        error: null\n      };\n    case FETCH_CURRENCY_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        items: action.payload.currencys\n      };\n    case FETCH_CURRENCY_FAILURE:\n      return {\n        ...state,\n        loading: false,\n        error: action.payload.error,\n        items: []\n      };\n    default:\n      return state;\n  }\n};\n\nexport default currencyFetch;\n","import { combineReducers } from \"redux\";\nimport submitValue from \"./submitValue\";\nimport currencyFetch from \"./currencyFetch\";\n\nexport default combineReducers({\n  submitValue,\n  currencyFetch\n});\n","import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport { Table, Icon } from 'antd';\nimport CountUp from \"react-countup\";\nimport '../styles/CusTable.scss';\n\nconst { Column, ColumnGroup } = Table;\n\nconst CaretUp = ({ value, differ }) => {\n  return (\n    <div>\n      {value}\n      <span style={{ color: \"red\", fontSize: \"12px\", paddingLeft: \"8px\" }}>\n        <Icon type=\"rise\" />\n      </span>\n      <span style={{ color: \"red\", fontSize: \"6px\" }}> {differ}</span>\n    </div>\n  );\n};\n\nconst CaretDown = ({ value, differ }) => {\n  return (\n    <div>\n      {value}\n      <span style={{ color: \"green\", fontSize: \"12px\", paddingLeft: \"8px\" }}>\n        <Icon type=\"fall\" />\n      </span>\n      <span style={{ color: \"green\", fontSize: \"6px\" }}> {differ}</span>\n    </div>\n  );\n};\n\nconst renderBuyColumn = (recentArray, value, prop, defaultday) => {\n  if (!recentArray.length || value === 0) {\n    return <span>{value}</span>;\n  }\n  let obj = recentArray.find(x => x.key === prop.country);\n  let differ = (value - obj[defaultday][\"買入\"]).toFixed(4);\n  return differ > 0 ? (<CaretUp value={value} differ={Math.abs(differ)} />) : (<CaretDown value={value} differ={Math.abs(differ)} />);\n}\n\nconst renderSellColumn = (recentArray, value, prop, defaultday) => {\n  if (!recentArray.length || value === 0) {\n    return <span>{value}</span>;\n  }\n  let obj = recentArray.find(x => x.key === prop.country);\n  let differ = (value - obj[defaultday][\"賣出\"]).toFixed(4);\n  return differ > 0 ? (<CaretDown value={value} differ={Math.abs(differ)} />) : (<CaretUp value={value} differ={Math.abs(differ)} />);\n}\n\nclass CusTable extends Component {\n  render() {\n    const { loading, dataSource, forex, twd, status, defaultday } = this.props;\n    let recentArray = dataSource.map((v) => {\n      let obj = {\n        'key': v.country,\n        'day_10': v.recent[0],\n        'day_30': v.recent[1],\n        'day_60': v.recent[2],\n        'day_90': v.recent[3],\n        'day_120': v.recent[4],\n        'day_150': v.recent[5],\n        'day_180': v.recent[6],\n      };\n      return obj;\n    });\n\n    console.log(recentArray)\n    return (\n      <Table\n        scroll={{ x: 1100, y: 570 }}\n        dataSource={dataSource}\n        loading={loading}\n        rowKey={x => x.country}\n        pagination={false}>\n        <Column title=\"幣別\" dataIndex=\"country\"\n          key=\"country\" fixed=\"left\" align=\"center\" width={100}\n          render={(value, prop) => (<img src={\"/images/\" + value + \".png\"} alt={prop.country} />)} />\n        <ColumnGroup title=\"現金匯率\">\n          <Column title=\"銀行買入\" dataIndex=\"cashbuy\"\n            key=\"cashbuy\" width={150} align=\"center\"\n            render={(value, prop) => { return renderBuyColumn(recentArray, value, prop, defaultday) }} />\n          <Column title=\"銀行賣出\" dataIndex=\"cashsell\"\n            key=\"cashsell\" width={150} align=\"center\"\n            render={(value, prop) => { return renderSellColumn(recentArray, value, prop, defaultday) }} />\n        </ColumnGroup>\n        <ColumnGroup title=\"即期匯率\">\n          <Column title=\"銀行買入\" dataIndex=\"datebuy\"\n            key=\"datebuy\" width={150} align=\"center\"\n            render={(value, prop) => { return renderBuyColumn(recentArray, value, prop, defaultday) }} />\n          <Column title=\"銀行賣出\" dataIndex=\"datesell\"\n            key=\"datesell\" width={150} align=\"center\"\n            render={(value, prop) => { return renderSellColumn(recentArray, value, prop, defaultday) }} />\n        </ColumnGroup>\n        <ColumnGroup title=\"匯率試算\">\n          <Column title=\"台幣換外幣\" dataIndex=\"country\"\n            key=\"countrybuy\" width={150} align=\"center\"\n            render={(country, prop) => {\n              let value = (twd / parseFloat(status ? prop.datesell : prop.cashsell)).toFixed(2);\n              return (\n                <span>{prop.mark} {isFinite(value) ?\n                  <CountUp\n                    start={value / 10}\n                    end={Number(value)}\n                    duration={1.5}\n                    separator={\",\"}\n                    decimals={2}\n                    ref={countUp => { this.myCountUp = countUp; }} /> : (0.0).toFixed(2)}</span>)\n            }} />\n          <Column title=\"外幣換台幣\" dataIndex=\"country\"\n            key=\"countrysell\" width={150} align=\"center\"\n            render={(country, prop) => {\n              let value = (forex * parseFloat(status ? prop.datebuy : prop.cashbuy)).toFixed(2);\n              return (\n                <span>NT$ {isFinite(value) ?\n                  <CountUp\n                    start={value / 10}\n                    end={Number(value)}\n                    duration={1.5}\n                    separator={\",\"}\n                    decimals={2} /> : (0.0).toFixed(2)}</span>)\n            }} />\n        </ColumnGroup>\n      </Table>\n    )\n  }\n}\n\nconst mapStateToProps = ({ submitValue }) => ({\n  forex: submitValue.forex,\n  twd: submitValue.twd,\n  status: submitValue.status\n});\n\nexport default connect(mapStateToProps)(CusTable);\n","import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport ReactJson from 'react-json-view'\nimport { Tabs, Button, Select, Switch, Icon, InputNumber } from 'antd';\nimport CusTable from \"./components/CusTable\";\nimport { fetchCurrency, submitValue } from './actions/currencyAction'\nimport './App.scss';\n\nconst { TabPane } = Tabs;\nconst { Option } = Select;\n\n\nlet expectTree = {\n  'USD': {\n    \"買進\": 29,\n    \"賣出\": 31\n  },\n  'AUD': {\n    \"買進\": 21,\n    \"賣出\": 23\n  },\n  'JPY': {\n    \"買進\": 0.25,\n    \"賣出\": 0.28\n  },\n  'ZAR': {\n    \"買進\": 2.0,\n    \"賣出\": 2.3\n  },\n  'CNY': {\n    \"買進\": 4.3,\n    \"賣出\": 4.7\n  },\n}\n\nclass App extends Component {\n  state = {\n    twd: 100,\n    forex: 100,\n    status: true,\n    defaultday: 'day_10'\n  }\n\n  componentDidMount() {\n    this.props.dispatch(fetchCurrency);\n  }\n\n  render() {\n    const { loading, currencys: dataSource } = this.props;\n\n    return (\n      <div className=\"wrapper\">\n        <header className=\"header\">\n          <div className=\"block\">\n            <h4><Icon type=\"dollar\" theme=\"twoTone\" twoToneColor=\"#d48806\" />&nbsp;&nbsp;設定金額</h4>\n            <Switch checkedChildren=\"即期\" unCheckedChildren=\"現金\"\n              defaultChecked style={{ marginBottom: \"20px\" }}\n              onChange={checked => { this.setState({ status: checked }) }} />\n            <br />\n            <InputNumber style={{ marginBottom: \"20px\", width: \"100%\" }}\n              min={1} max={1000000} step={100} defaultValue={this.state.twd}\n              formatter={value => `台幣 $ ${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}\n              parser={value => value.replace(/\\$\\s?|(,*)/g, \"\").replace(/台幣\\s?|(,*)/g, \"\")}\n              onChange={value => { this.setState({ twd: value }); }} />\n            <p><small>Ex : 台幣 $ 100 可換 US$ 3.3 美元</small></p>\n            <InputNumber\n              style={{ marginBottom: \"20px\", width: \"100%\" }}\n              min={1} max={1000000} step={100} defaultValue={this.state.forex}\n              formatter={value => `外幣 $ ${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}\n              parser={value => value.replace(/\\$\\s?|(,*)/g, \"\").replace(/外幣\\s?|(,*)/g, \"\")}\n              onChange={value => { this.setState({ forex: value }); }} />\n            <p><small>Ex : 美元 US$ 100 可換 $ 3000 台幣</small></p>\n            <Button type=\"dashed\" onClick={() => { this.props.dispatch(submitValue(this.state)) }}>計算</Button>\n          </div>\n          <div className=\"block\">\n            <h4><Icon type=\"pound\" style={{ color: \"#d48806\" }} />&nbsp;&nbsp;設定遠期天數差</h4>\n            <Select defaultValue={this.state.defaultday} style={{ width: \"100%\" }}\n              onChange={(value) => { this.setState({ defaultday: value }); }}>\n              <Option value=\"day_10\">10天</Option>\n              <Option value=\"day_30\">30天</Option>\n              <Option value=\"day_60\">60天</Option>\n              <Option value=\"day_90\">90天</Option>\n              <Option value=\"day_120\">120天</Option>\n              <Option value=\"day_150\">150天</Option>\n              <Option value=\"day_180\">180天</Option>\n            </Select>\n          </div>\n          <div className=\"block\" style={{ maxHeight: \"250px\" }}>\n            <h4><Icon type=\"euro\" theme=\"twoTone\" twoToneColor=\"#d48806\" />&nbsp;&nbsp;設定期望值</h4>\n            <p>\n              <small>Ex : 期望銀行美元兌台幣 1：29 買進</small>\n              <br />\n              <small>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;期望銀行美元兌台幣 1：31 賣出</small>\n            </p>\n            <ReactJson src={expectTree} name={false}\n              displayDataTypes={false} displayObjectSize={false}\n              onEdit={true} collapsed={1} />\n          </div>\n        </header>\n        <section className=\"section\">\n          <Tabs defaultActiveKey=\"0\">\n            <TabPane tab={<span><Icon type=\"pay-circle-o\" />即時匯率</span>} key=\"0\">\n              <CusTable loading={loading} dataSource={dataSource} defaultday={this.state.defaultday} />\n            </TabPane>\n            <TabPane tab={<span><Icon type=\"line-chart\" />走勢分析</span>} key=\"1\">\n            </TabPane>\n          </Tabs>\n        </section>\n        {/* <footer className=\"footer\">\n          <p>\n            <small>\n              Hosted on GitHub Pages\n              <br />\n              — Base by <a href=\"https://github.com/facebook/create-react-app\" target=\"_blank\" rel=\"noopener noreferrer\">create-react-app</a>\n              <br />\n              — Base Design by <a href=\"https://ant.design/\" target=\"_blank\" rel=\"noopener noreferrer\">Ant Design</a>\n            </small>\n          </p>\n        </footer> */}\n      </div >\n    );\n  }\n}\n\nconst mapStateToProps = ({ currencyFetch }) => ({\n  currencys: currencyFetch.items,\n  loading: currencyFetch.loading,\n  error: currencyFetch.error\n});\n\nexport default connect(mapStateToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './index.scss';\n\nconst store = createStore(rootReducer, applyMiddleware(thunk))\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}